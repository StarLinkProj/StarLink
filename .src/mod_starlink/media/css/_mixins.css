/** PostCSS */
/** Plugins: postcss-mixins, postcss-custom-properties, postcss-nesting */

@define-mixin hoverButton {
  display       : block;
  margin        : 0 auto;
  color         : #fff !important;
  background    : var(--linkColor) !important;
  border        : 1px solid #fff !important;
  border-radius : 30px !important;
  outline       : none;
  text-align    : center;
  text-shadow   : none !important;
  font-weight   : 400 !important;
  font-size     : 18px !important;
  transition    : background 300ms ease-in-out;
  &:hover,
  &:focus {
    border-color : var(--linkColor) !important;
    color        : var(--linkColor) !important;
    background   : #fff !important;
  }
  &:hover span,
  &:focus span {
    color : var(--linkColor) !important;
  }
  @nest & span {
    color       : #fff !important;
    font-weight : 400 !important;
  }
}

/* utility mixin for adding top and bottom margins */
@define-mixin top $block, $rems {
  .$(block)--top$(rems) {
    margin-top : $(rems)rem !important;
  }
}
@define-mixin bot $block, $rems {
  .$(block)--bot$(rems) {
    margin-bottom : $(rems)rem !important;
  }
}
@define-mixin topbot  $block, $rems {
  .$(block)--tb$(rems) {
    margin-top    : $(rems)rem !important;
    margin-bottom : $(rems)rem !important;
  }
}
@define-mixin allmargins $block, $rems {
  .$(block)--all$(rems) {
    margin : $(rems)rem !important;
  }
}

@define-mixin fillBottom $color: white, $image, $size: 100% {
  background-color : $color;
  background       : url($image) no-repeat bottom center;
  background-size  : $size;
 }

/** vertically aligns content in a container with background image of $ar aspect ratio

    Usage:

    .my-module {
      @include image-spacer(.665, 450px, 0.5);

      background: url('path/to/img') no-repeat center center;
      background-size: cover;
    }
*/
@define-mixin image-spacer $ar: 1.00, $max-height: 600px, $container-width: 1.00 {
  &:before {
    content: '';
    display: inline-block;
    padding-top: $ar * 100%;
    vertical-align: middle;
  }
  @media (min-width: ($max-height / ($container-width * $ar))) {
    height: $max-height;
    &:before {
       padding-top: 0;
       height: 100%;
    }
  }
}